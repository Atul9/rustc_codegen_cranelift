cargo-features = ["profile-overrides"]

[package]
name = "rustc_codegen_cranelift"
version = "0.1.0"
authors = ["bjorn3 <bjorn3@users.noreply.github.com>"]
edition = "2018"

[lib]
crate-type = ["rlib", "dylib"]

[dependencies]
# These have to be in sync with each other
cranelift = { git = "https://github.com/CraneStation/cranelift.git", rev = "a1d8fbc8dda7984edcf334c8e3d0e4ecd6c04968" }
cranelift-module = { git = "https://github.com/CraneStation/cranelift.git", rev = "a1d8fbc8dda7984edcf334c8e3d0e4ecd6c04968" }
cranelift-faerie = { git = "https://github.com/CraneStation/cranelift.git", rev = "a1d8fbc8dda7984edcf334c8e3d0e4ecd6c04968" }
target-lexicon = "0.4.0"
faerie = "0.10.0"

#goblin = "0.0.17"
ar = "0.7.0"
bitflags = "1.0.3"
byteorder = "1.2.7"
libc = "0.2.53"
tempfile = "3.0.7"
gimli = { git = "https://github.com/gimli-rs/gimli.git" }
indexmap = "1.0.2"

syntax = { path = "../rust_fork/src/libsyntax" }
syntax_ext = { path = "../rust_fork/src/libsyntax_ext" }
syntax_pos = { path = "../rust_fork/src/libsyntax_pos" }
serialize = { path = "../rust_fork/src/libserialize" }
rustc = { path = "../rust_fork/src/librustc" }
rustc_allocator = { path = "../rust_fork/src/librustc_allocator" }
rustc_borrowck = { path = "../rust_fork/src/librustc_borrowck" }
rustc_incremental = { path = "../rust_fork/src/librustc_incremental" }
rustc_traits = { path = "../rust_fork/src/librustc_traits" }
rustc_data_structures = { path = "../rust_fork/src/librustc_data_structures" }
rustc_codegen_ssa = { path = "../rust_fork/src/librustc_codegen_ssa" }
rustc_codegen_utils = { path = "../rust_fork/src/librustc_codegen_utils" }
rustc_metadata = { path = "../rust_fork/src/librustc_metadata" }
rustc_mir = { path = "../rust_fork/src/librustc_mir" }
rustc_passes = { path = "../rust_fork/src/librustc_passes" }
rustc_typeck = { path = "../rust_fork/src/librustc_typeck" }
rustc_lint = { path = "../rust_fork/src/librustc_lint" }
rustc_errors = { path = "../rust_fork/src/librustc_errors" }
rustc_plugin = { path = "../rust_fork/src/librustc_plugin" }
rustc_privacy = { path = "../rust_fork/src/librustc_privacy" }
rustc_resolve = { path = "../rust_fork/src/librustc_resolve" }
rustc_fs_util = { path = "../rust_fork/src/librustc_fs_util" }
rustc_target = { path = "../rust_fork/src/librustc_target" }

# Uncomment to use local checkout of cranelift
#[patch."https://github.com/CraneStation/cranelift.git"]
#cranelift = { path = "../cranelift/cranelift-umbrella" }
#cranelift-module = { path = "../cranelift/cranelift-module" }
#cranelift-simplejit = { path = "../cranelift/cranelift-simplejit" }
#cranelift-faerie = { path = "../cranelift/cranelift-faerie" }

#[patch."https://github.com/gimli-rs/gimli.git"]
#gimli = { path = "../" }

[patch.crates-io]
target-lexicon = { path = "../target-lexicon" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
cranelift-simplejit = { git = "https://github.com/CraneStation/cranelift.git" }

[profile.dev.overrides."*"]
opt-level = 3
